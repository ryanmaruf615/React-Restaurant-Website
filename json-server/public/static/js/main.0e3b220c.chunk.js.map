{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponents.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponents.js","components/FooterComponents.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leaders","leadersLoading","leadersErrMess","RenderLeader","leader","in","tag","left","middle","object","body","heading","About","map","key","id","to","active","title","list","RenderMenuItem","onClick","width","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","isOpen","toggle","value","RenderDish","top","RenderComments","commentsArray","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","toggleNav","isNavOpen","handlelogin","event","alert","username","password","remember","preventDefault","Fragment","dark","expand","height","navbar","HtmlFor","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e3b220c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n\r\n}\r\n\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                                isLoading={props.dishesLoading}\r\n                                errMess={props.dishesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    {/*<RenderCard item={props.leader} /> */}\r\n                    <RenderCard item={props.leaders} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n    return(\r\n        <Stagger in>\r\n            <Fade in>\r\n                <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        </Stagger>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <RenderLeader leader={leader} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport {Card,CardImg,CardImgOverlay,CardText,CardBody,CardTitle, Breadcrumb,BreadcrumbItem} from \"reactstrap\";\r\nimport { Link} from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem({dish ,onClick }){\r\n\r\n    return(\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu =(props)=> {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                <RenderMenuItem dish={dish}/>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Input, Row, Col} from 'reactstrap';\r\nimport {Control, Form, Errors, actions} from 'react-redux-form';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst required = (val) => val&&val.length;\r\nconst maxLength=(len)=>(val)=>!(val)|| (val.length<=len);\r\nconst minLength=(len)=>(val)=>(val) && (val.length>=len);\r\nconst isNumber=(val)=>!isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Contact Us\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                  placeholder=\"First Name\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                  placeholder=\"Last Name\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                                  placeholder=\"Tel. Number\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                                  placeholder=\"Email\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, validEmail\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                              className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                                    className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                                      rows=\"12\"\r\n                                                      className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Row,Col,Label,Card,CardImg, Button, ModalHeader,ModalBody, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal} from 'reactstrap';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isModalOpen:false\r\n        };\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n         this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil\" /> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={this.handleSubmit}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>\r\n                                    Rating\r\n                                </Label>\r\n                                <Col md={{ size: 12 }}>\r\n                                    <Control.select\r\n                                        model=\".rating\"\r\n                                        name=\"rating\"\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>\r\n                                    Your Name\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.text\r\n                                        model=\".author\"\r\n                                        id=\"author\"\r\n                                        name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: \"Must be greater than 2 characters\",\r\n                                            maxLength: \"Must be 15 characters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>\r\n                                    Comment\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea\r\n                                        model=\".comment\"\r\n                                        id=\"comment\"\r\n                                        name=\"comment\"\r\n                                        rows={5}\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1 \">\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RenderComments({commentsArray,postComment ,dishId}) {\r\n\r\n    const comments = commentsArray.map((comment) => {\r\n        return (\r\n            <div>\r\n                <li key ={comment.id} className=\"row\">\r\n                    <ul>\r\n                        <div className=\"col-12\">\r\n                            {comment.comment}\r\n                            <br></br>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <span>--{comment.author},</span>\r\n                            <span> {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</span>\r\n                            <br></br>\r\n                        </div>\r\n                    </ul>\r\n                </li>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (commentsArray != null){\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1 \">\r\n                <h4>Comments</h4>\r\n                <div className=\"list-unstyled\">\r\n                    {comments}\r\n                </div>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n\r\n\r\n        if (props.dish != null){\r\n        return(\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row \">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments  commentsArray={props.comments}\r\n                    postComment={props.postComment}\r\n                     dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"row\"></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React,{Component} from \"react\";\r\nimport {\r\n    Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen:false\r\n        };\r\n            this.toggleNav   = this.toggleNav.bind(this);\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handlelogin = this.handlelogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen,\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    }\r\n\r\n    handlelogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username:\" + this.username.value + \"Password:\" + this.password.value\r\n        + \"Remember:\" + this.remember.value);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                       <Form onSubmit={this.handlelogin}>\r\n                           <FormGroup>\r\n                               <Label HtmlFor=\"username\" >Username</Label>\r\n                               <Input type=\"text\" id=\"username\" name=\"username\"\r\n                               innerRef={(input) => this.username = input}/>\r\n                           </FormGroup>\r\n\r\n                           <FormGroup>\r\n                               <Label HtmlFor=\"password\" >Password</Label>\r\n                               <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                      innerRef={(input) => this.password = input}/>\r\n\r\n                           </FormGroup>\r\n\r\n                           <FormGroup check>\r\n                               <Label check>\r\n                                   <input type=\"checkbox\" name=\"remember\"\r\n                                          innerRef={(input) => this.remember = input}/>\r\n                                   Remember me\r\n                               </Label>\r\n                           </FormGroup>\r\n                           <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                       </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n         <div className=\"container\">\r\n             <div className=\"row justify-content-center\">\r\n                 <div className=\"col-4 offset-1 col-sm-2\">\r\n                     <h5>Links</h5>\r\n                     <ul className=\"list-unstyled\">\r\n                         <li><Link to='/home'>Home</Link></li>\r\n                         <li><Link to='/aboutus'>About Us</Link></li>\r\n                         <li><Link to='/menu'>Menu</Link></li>\r\n                         <li><Link to='/contactus'>Contact Us</Link></li>\r\n                     </ul>\r\n                 </div>\r\n                 <div className=\"col-7 col-sm-5\">\r\n                     <h5>OUR ADDRESS</h5>\r\n                     <address>\r\n                         121, Clear Water Bay Road<br />\r\n                         Clear Water Bay, Kowloon<br />\r\n                         HONG KONG<br />\r\n                         <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                         <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                         <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                     </address>\r\n                 </div>\r\n                 <div className=\"col-12 col-sm-4 align-self-center\">\r\n                     <div className=\"text-center\">\r\n                         <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                         <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                         <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                         <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                         <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                         <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n             <div className=\"row justify-content-center\">\r\n                 <div className=\"col-auto\">\r\n                     <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                 </div>\r\n             </div>\r\n         </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Footer;","    import * as ActionTypes from './ActionTypes';\r\n    import { DISHES } from '../shared/dishes';\r\n    import { baseUrl } from '../shared/baseUrl';\r\n\r\n    export const addComment = (comment) => ({\r\n        type: ActionTypes.ADD_COMMENT,\r\n        payload: comment\r\n    });\r\n\r\n    export const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n        const newComment = {\r\n            dishId: dishId,\r\n            rating: rating,\r\n            author: author,\r\n            comment: comment\r\n        };\r\n        newComment.date = new Date().toISOString();\r\n\r\n        return fetch(baseUrl + 'comments', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(newComment),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: \"same-origin\"\r\n        })\r\n            .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    } else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error => {\r\n                    throw error;\r\n                })\r\n            .then(response => response.json())\r\n            .then(response => dispatch(addComment(response)))\r\n            .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n    };\r\n\r\n    /* Fetching the dish  */\r\n    export const fetchDishes = () => (dispatch) => {\r\n\r\n        dispatch(dishesLoading(true));\r\n\r\n        return fetch(baseUrl + 'dishes')\r\n            .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    } else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error => {\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                })\r\n            .then(response => response.json())\r\n            .then(dishes => dispatch(addDishes(dishes)))\r\n            .catch(error => dispatch(dishesFailed(error.message)));\r\n    }\r\n\r\n    export const dishesLoading = () => ({\r\n        type: ActionTypes.DISHES_LOADING\r\n    });\r\n\r\n    export const dishesFailed = (errmess) => ({\r\n        type: ActionTypes.DISHES_FAILED,\r\n        payload: errmess\r\n    });\r\n\r\n    export const addDishes = (dishes) => ({\r\n        type: ActionTypes.ADD_DISHES,\r\n        payload: dishes\r\n    });\r\n\r\n\r\n    /* Fetching the comments  */\r\n    export const fetchComments = () => (dispatch) => {\r\n        return fetch(baseUrl + 'comments')\r\n            .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    } else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error => {\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                })\r\n            .then(response => response.json())\r\n            .then(comments => dispatch(addComments(comments)))\r\n            .catch(error => dispatch(commentsFailed(error.message)));\r\n    };\r\n\r\n    export const commentsFailed = (errmess) => ({\r\n        type: ActionTypes.COMMENTS_FAILED,\r\n        payload: errmess\r\n    });\r\n\r\n    export const addComments = (comments) => ({\r\n        type: ActionTypes.ADD_COMMENTS,\r\n        payload: comments\r\n    });\r\n\r\n\r\n    /* Fetching the promotions  */\r\n    export const fetchPromos = () => (dispatch) => {\r\n\r\n        dispatch(promosLoading());\r\n\r\n        return fetch(baseUrl + 'promotions')\r\n            .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    } else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error => {\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                })\r\n            .then(response => response.json())\r\n            .then(promos => dispatch(addPromos(promos)))\r\n            .catch(error => dispatch(promosFailed(error.message)));\r\n    }\r\n\r\n\r\n    export const promosLoading = () => ({\r\n        type: ActionTypes.PROMOS_LOADING\r\n    });\r\n\r\n    export const promosFailed = (errmess) => ({\r\n        type: ActionTypes.PROMOS_FAILED,\r\n        payload: errmess\r\n    });\r\n\r\n    export const addPromos = (promos) => ({\r\n        type: ActionTypes.ADD_PROMOS,\r\n        payload: promos\r\n    });\r\n\r\n\r\n   /* Fetching the Leaders */\r\n\r\n    export const fetchLeaders = () => (dispatch) => {\r\n        return fetch(baseUrl + 'leaders')\r\n            .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    } else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error => {\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                })\r\n            .then(response => response.json())\r\n            .then(leaders => dispatch(addLeaders(leaders)))\r\n            .catch(error => dispatch(leadersFailed(error.message)));\r\n        };\r\n\r\n        export const leadersFailed = (errmess) => ({\r\n            type: ActionTypes.LEADERS_FAILED,\r\n            payload: errmess\r\n        });\r\n        export const leadersLoading = () => ({\r\n            type: ActionTypes.LEADERS_LOADING,\r\n        });\r\n\r\n\r\n        export const addLeaders = (leaders) => ({\r\n            type: ActionTypes.ADD_LEADERS,\r\n            payload: leaders\r\n        });\r\n\r\n\r\n        /*   Feedback .......................................................... */\r\n\r\n              export const postFeedback = (\r\n              firstname,\r\n              lastname,\r\n              telnum,\r\n              email,\r\n              agree,\r\n              contactType,\r\n              message\r\n            ) => dispatch => {\r\n              const newFeedback = {\r\n                firstname: firstname,\r\n                lastname: lastname,\r\n                telnum: telnum,\r\n                email: email,\r\n                agree: agree,\r\n                contactType: contactType,\r\n                message: message\r\n              };\r\n\r\n              return fetch(baseUrl + \"feedback\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify(newFeedback),\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: \"same-origin\"\r\n              })\r\n                .then(\r\n                  response => {\r\n                    if (response.ok) {\r\n                      return response;\r\n                    } else {\r\n                      var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                      );\r\n                      error.response = response;\r\n                      throw error;\r\n                    }\r\n                  },\r\n                  error => {\r\n                    throw error;\r\n                  }\r\n                )\r\n                .then(response => response.json())\r\n                .then(response =>\r\n                  alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n                )\r\n                .catch(error => {\r\n                  console.log(\"post feedbacks\", error.message);\r\n                  alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n                });\r\n            };\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\n\r\n export const LEADERS_LOADING = 'LEADERS_LOADING';\r\n export const ADD_LEADERS = 'ADD_LEADERS';\r\n export const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","    import React, { Component } from 'react';\r\n    import Home from \"./HomeComponent\";\r\n    import About from \"./AboutComponent\";\r\n    import Menu from './MenuComponents';\r\n    import Contact from \"./ContactComponent\";\r\n    import DishDetail from './DishdetailComponent';\r\n    import Header from \"./HeaderComponents\";\r\n    import Footer from \"./FooterComponents\";\r\n    import { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\n    import { connect } from 'react-redux';\r\n\r\n    import { postComment ,postFeedback  , fetchDishes, fetchComments, fetchPromos , fetchLeaders  } from '../redux/ActionCreators';\r\n    import { actions } from 'react-redux-form';\r\n\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            dishes: state.dishes,\r\n            comments: state.comments,\r\n            promotions: state.promotions,\r\n            leaders: state.leaders\r\n        }\r\n    }\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n        fetchDishes: () => { dispatch(fetchDishes())},\r\n\r\n        fetchComments: () => dispatch(fetchComments()),\r\n        fetchPromos: () => dispatch(fetchPromos()),\r\n        fetchLeaders: () => dispatch(fetchLeaders()),\r\n\r\n        resetFeedbackForm: () => {dispatch(actions.reset(\"feedback\"));},\r\n        postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) =>\r\n         dispatch( postFeedback( firstname,lastname,telnum,email,agree,contactType,message) )\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n\r\n    class Main extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n\r\n        }\r\n\r\n\r\n        componentDidMount() {\r\n            this.props.fetchDishes();\r\n            this.props.fetchComments();\r\n            this.props.fetchPromos();\r\n            /* */\r\n            this.props.fetchLeaders();\r\n        }\r\n\r\n        render() {\r\n\r\n\r\n            const DishWithId = ({match}) => {\r\n                return(\r\n                    <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                                isLoading={this.props.dishes.isLoading}\r\n                                errMess={this.props.dishes.errMess}\r\n                                comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                                commentsErrMess={this.props.comments.errMess}\r\n                                postComment={this.props.postComment}\r\n                    />\r\n                );\r\n            };\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path='/home' component={()=><Home\r\n                            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                            dishesLoading={this.props.dishes.isLoading}\r\n                            dishErrMess={this.props.dishes.errMess}\r\n                            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                            promoLoading={this.props.promotions.isLoading}\r\n                            promoErrMess={this.props.promotions.errMess}\r\n                            /*\r\n                            leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n                            */\r\n\r\n                            leaders={this.props.leaders.leaders.filter((leaders) => leaders.featured)[0]}\r\n                            leadersErrMess={this.props.leaders.errMess}\r\n                            leadersLoading={this.props.leaders.isLoading}\r\n\r\n\r\n                        />}/>\r\n                        <Route path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                        <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                        <Route path='/menu/:dishId' component={DishWithId} />\r\n                         <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\r\n\r\n\r\n\r\n\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n\r\n                    <Footer />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    export default withRouter(connect(mapStateToProps , mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload , dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\n/*\r\nimport { LEADERS } from '../shared/leaders';\r\n\r\nexport const Leaders = (state = LEADERS, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n*/\r\n\r\n\r\n\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\nimport Main from \"./components/MainComponent\";\nimport './App.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { ConfigureStore} from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n\n    render() {\n        return (\n            <Provider store={store}>\n            <BrowserRouter>\n            <div>\n              <Main/>\n            </div>\n            </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import {createStore, combineReducers ,applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}